{"ast":null,"code":"var _jsxFileName = \"/myreactdd/frontend/src/containers/SendFilesButtonContainer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SendFilesButton from '../components/SendFilesButton';\nimport { handleError } from '../utils/errorHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendFilesButtonContainer({\n  files,\n  setFiles,\n  setSharedFiles,\n  setInSendingProcess\n}) {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  async function isThereEdgeCases() {\n    if (files.length === 0) {\n      alert('Add a file genius');\n      return true;\n    }\n    try {\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/check/${roomCode}`);\n      if (!data.doesRoomExists) {\n        throw new Error('Room Does Not Exist Anymore');\n      }\n    } catch (error) {\n      handleError(error, error.message);\n      return true;\n    }\n    return false;\n  }\n  async function handleSendingFiles() {\n    setInSendingProcess(true);\n    if (await isThereEdgeCases()) {\n      setInSendingProcess(false);\n      return;\n    }\n    const formData = new FormData();\n    for (const file of files) {\n      try {\n        if (file.size > parseInt(process.env.REACT_APP_MAX_FILE_SIZE, 10)) {\n          throw new Error('File is too large');\n        }\n        formData.append('file', file);\n        const {\n          data\n        } = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/upload/${roomCode}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (data.error) {\n          throw new Error(`Failed to send files: ${data.error}`);\n        }\n        setSharedFiles(prevSharedFiles => [...prevSharedFiles, {\n          filename: data.filename,\n          fileURL: data.url\n        }]);\n      } catch (error) {\n        handleError(error, `${file.name} failed to upload (check file size)`);\n      } finally {\n        setFiles(prevFiles => prevFiles.filter(f => f !== file));\n      }\n    }\n    setInSendingProcess(false);\n  }\n  return /*#__PURE__*/_jsxDEV(SendFilesButton, {\n    onClick: handleSendingFiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(SendFilesButtonContainer, \"bn8gyaSNuT1MSjezq9IhAtSjJnM=\", false, function () {\n  return [useParams];\n});\n_c = SendFilesButtonContainer;\nexport default SendFilesButtonContainer;\nvar _c;\n$RefreshReg$(_c, \"SendFilesButtonContainer\");","map":{"version":3,"names":["React","useParams","axios","SendFilesButton","handleError","jsxDEV","_jsxDEV","SendFilesButtonContainer","files","setFiles","setSharedFiles","setInSendingProcess","_s","roomCode","isThereEdgeCases","length","alert","data","get","process","env","REACT_APP_API_BASE_URL","doesRoomExists","Error","error","message","handleSendingFiles","formData","FormData","file","size","parseInt","REACT_APP_MAX_FILE_SIZE","append","post","headers","prevSharedFiles","filename","fileURL","url","name","prevFiles","filter","f","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/myreactdd/frontend/src/containers/SendFilesButtonContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport SendFilesButton from '../components/SendFilesButton';\r\nimport { handleError } from '../utils/errorHandler';\r\n\r\nfunction SendFilesButtonContainer({ files, setFiles, setSharedFiles, setInSendingProcess }) {\r\n    const { roomCode } = useParams()\r\n\r\n    async function isThereEdgeCases() {\r\n      if (files.length === 0){\r\n        alert('Add a file genius')\r\n        return true\r\n      }\r\n      \r\n      try {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/check/${roomCode}`)\r\n        \r\n        if (!data.doesRoomExists){\r\n          throw new Error('Room Does Not Exist Anymore')\r\n        }\r\n      } catch (error) {\r\n        handleError(error, error.message)\r\n        return true\r\n      }\r\n      \r\n      return false\r\n    }\r\n    \r\n    async function handleSendingFiles() {\r\n      setInSendingProcess(true)\r\n      \r\n      if (await isThereEdgeCases()) {\r\n        setInSendingProcess(false)\r\n        return\r\n      }\r\n      \r\n      const formData = new FormData();\r\n      \r\n      for (const file of files) {\r\n        try {\r\n          if (file.size > parseInt(process.env.REACT_APP_MAX_FILE_SIZE, 10)){\r\n            throw new Error('File is too large')\r\n          }\r\n\r\n          formData.append('file', file);\r\n          const { data} = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/upload/${roomCode}`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n          })\r\n    \r\n          if (data.error) {\r\n              throw new Error(`Failed to send files: ${data.error}`);\r\n          }\r\n           \r\n          setSharedFiles(prevSharedFiles => [\r\n            ...prevSharedFiles,\r\n            { filename: data.filename, fileURL: data.url }\r\n          ])   \r\n        } catch (error) {\r\n          handleError(error, `${file.name} failed to upload (check file size)`)\r\n        } finally {\r\n          setFiles(prevFiles => prevFiles.filter(f => f !== file))          \r\n        }\r\n      }\r\n      setInSendingProcess(false)\r\n    }\r\n\r\n  return (\r\n    <SendFilesButton onClick={handleSendingFiles} />\r\n  )\r\n}\r\n\r\nexport default SendFilesButtonContainer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}