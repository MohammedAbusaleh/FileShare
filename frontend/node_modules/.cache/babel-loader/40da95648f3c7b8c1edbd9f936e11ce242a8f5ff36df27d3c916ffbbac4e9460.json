{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WADREN\\\\Desktop\\\\brrr\\\\react\\\\myreactdd\\\\frontend\\\\src\\\\containers\\\\FileChatContainer.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport FilesChat from '../components/FilesChat';\nimport axios from 'axios';\nimport { handleError } from '../utils/errorHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilesChatContainer({\n  sharedFiles,\n  setSharedFiles\n}) {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  useEffect(() => {\n    async function fetchFiles() {\n      try {\n        const {\n          data\n        } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/room/${roomCode}`);\n        if (data.error) {\n          throw new Error(`Failed to fetch files: ${data.error}`);\n        }\n        setSharedFiles(data.files);\n      } catch (error) {\n        handleError(error, 'Faild to fetch files');\n      }\n    }\n    if (sharedFiles.length === 0) {\n      fetchFiles();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FilesChat, {\n    sharedFiles: sharedFiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(FilesChatContainer, \"TA1ox6rq59po01v+mO8A9wwChZ0=\", false, function () {\n  return [useParams];\n});\n_c = FilesChatContainer;\nexport default FilesChatContainer;\nvar _c;\n$RefreshReg$(_c, \"FilesChatContainer\");","map":{"version":3,"names":["React","useEffect","useParams","FilesChat","axios","handleError","jsxDEV","_jsxDEV","FilesChatContainer","sharedFiles","setSharedFiles","_s","roomCode","fetchFiles","data","get","process","env","REACT_APP_API_BASE_URL","error","Error","files","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/WADREN/Desktop/brrr/react/myreactdd/frontend/src/containers/FileChatContainer.js"],"sourcesContent":["import { React, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport FilesChat from '../components/FilesChat';\r\nimport axios from 'axios';\r\nimport { handleError } from '../utils/errorHandler';\r\n\r\nfunction FilesChatContainer({ sharedFiles, setSharedFiles }) {\r\n  const { roomCode } = useParams()\r\n  \r\n  useEffect(() => {\r\n    async function fetchFiles() {\r\n      try {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/room/${roomCode}`)\r\n\r\n        if (data.error) {\r\n          throw new Error(`Failed to fetch files: ${data.error}`)\r\n        }\r\n\r\n        setSharedFiles(data.files)\r\n      } catch (error) {\r\n        handleError(error, 'Faild to fetch files')\r\n      }\r\n    }\r\n    if (sharedFiles.length === 0) {\r\n        fetchFiles();\r\n      }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <FilesChat sharedFiles={ sharedFiles }/>\r\n  );\r\n}\r\n\r\nexport default FilesChatContainer;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,kBAAkBA,CAAC;EAAEC,WAAW;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM;IAAEC;EAAS,CAAC,GAAGV,SAAS,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,eAAeY,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,SAASN,QAAQ,EAAE,CAAC;QAE1F,IAAIE,IAAI,CAACK,KAAK,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,0BAA0BN,IAAI,CAACK,KAAK,EAAE,CAAC;QACzD;QAEAT,cAAc,CAACI,IAAI,CAACO,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdd,WAAW,CAACc,KAAK,EAAE,sBAAsB,CAAC;MAC5C;IACF;IACA,IAAIV,WAAW,CAACa,MAAM,KAAK,CAAC,EAAE;MAC1BT,UAAU,CAAC,CAAC;IACd;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEN,OAAA,CAACJ,SAAS;IAACM,WAAW,EAAGA;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE5C;AAACf,EAAA,CA1BQH,kBAAkB;EAAA,QACJN,SAAS;AAAA;AAAAyB,EAAA,GADvBnB,kBAAkB;AA4B3B,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}