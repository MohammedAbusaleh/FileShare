{"ast":null,"code":"var _jsxFileName = \"/myreactdd/frontend/src/components/DragNDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DragNDrop({\n  setFiles\n}) {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: \"h-screen flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dropzone-file\",\n      className: `flex flex-col flex-grow items-center justify-center border-2 border-gray-300 border-dashed rounded-lg cursor-pointer dark:hover:bg-bray-800 ${isDragActive ? 'transition-colors duration-1000 bg-red-600 animate-pulse' : 'dark:bg-gray-700 dark:border-gray-600'} dark:hover:border-gray-500 dark:hover:bg-gray-600`,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-8 h-8 mb-4 text-gray-500 dark:text-gray-400\",\n        \"aria-hidden\": \"true\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 20 16\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"currentColor\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: \"2\",\n          d: \"M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold mb-2 text-sm text-gray-500 dark:text-gray-400\",\n        children: \"Drop!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 text-sm text-gray-500 dark:text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 78\n        }, this), \" or drag and drop (5 MB max)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(DragNDrop, \"3FQVNeb5tMtY/wUBqGCt85321t8=\", false, function () {\n  return [useDropzone];\n});\n_c = DragNDrop;\nexport default DragNDrop;\nvar _c;\n$RefreshReg$(_c, \"DragNDrop\");","map":{"version":3,"names":["React","useCallback","useDropzone","jsxDEV","_jsxDEV","DragNDrop","setFiles","_s","onDrop","acceptedFiles","prevFiles","getRootProps","getInputProps","isDragActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/myreactdd/frontend/src/components/DragNDrop.js"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\n\r\nfunction DragNDrop({ setFiles }) {\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles((prevFiles) => [...prevFiles, ...acceptedFiles])\r\n        }, [])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return (\r\n        <div {...getRootProps()} className='h-screen flex'>\r\n            <input {...getInputProps()} />\r\n            <label htmlFor=\"dropzone-file\" className={`flex flex-col flex-grow items-center justify-center border-2 border-gray-300 border-dashed rounded-lg cursor-pointer dark:hover:bg-bray-800 ${isDragActive ? 'transition-colors duration-1000 bg-red-600 animate-pulse' : 'dark:bg-gray-700 dark:border-gray-600'} dark:hover:border-gray-500 dark:hover:bg-gray-600`}>\r\n            <svg className=\"w-8 h-8 mb-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 16\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2\"/>\r\n            </svg>\r\n            {\r\n            isDragActive ?\r\n                <span className=\"font-semibold mb-2 text-sm text-gray-500 dark:text-gray-400\">Drop!</span> :\r\n                <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span className=\"font-semibold\">Click to upload</span> or drag and drop (5 MB max)</p>\r\n            }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragNDrop\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,SAASA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAE7B,MAAMC,MAAM,GAAGP,WAAW,CAACQ,aAAa,IAAI;IACxCH,QAAQ,CAAEI,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE,GAAGD,aAAa,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EACV,MAAM;IAACE,YAAY;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGX,WAAW,CAAC;IAACM;EAAM,CAAC,CAAC;EAEzE,oBACIJ,OAAA;IAAA,GAASO,YAAY,CAAC,CAAC;IAAEG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC9CX,OAAA;MAAA,GAAWQ,aAAa,CAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9Bf,OAAA;MAAOgB,OAAO,EAAC,eAAe;MAACN,SAAS,EAAE,+IAA+ID,YAAY,GAAG,0DAA0D,GAAG,uCAAuC,oDAAqD;MAAAE,QAAA,gBACjWX,OAAA;QAAKU,SAAS,EAAC,+CAA+C;QAAC,eAAY,MAAM;QAACO,KAAK,EAAC,4BAA4B;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAC,WAAW;QAAAR,QAAA,eAChJX,OAAA;UAAMoB,MAAM,EAAC,cAAc;UAACC,aAAa,EAAC,OAAO;UAACC,cAAc,EAAC,OAAO;UAACC,WAAW,EAAC,GAAG;UAACC,CAAC,EAAC;QAAmJ;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/O,CAAC,EAENN,YAAY,gBACRT,OAAA;QAAMU,SAAS,EAAC,6DAA6D;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAC1Ff,OAAA;QAAGU,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAACX,OAAA;UAAMU,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gCAA4B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACZ,EAAA,CAtBQF,SAAS;EAAA,QAKsCH,WAAW;AAAA;AAAA2B,EAAA,GAL1DxB,SAAS;AAwBlB,eAAeA,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}