{"ast":null,"code":"import{toast}from'react-toastify';/**\r\n * Handle errors and display toast notifications.\r\n * @param {Error} error - The error object.\r\n * @param {string} toastMessage - The message to display in the toast notification. \r\n * If not provided, defaults to 'Oops, something happened. Please try again later.'\r\n */export function handleError(error){let toastMessage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Oops, something went wrong. Please try again later.';console.error('Error:',error.message);toast.error(toastMessage,{position:'top-left',autoClose:5000,closeOnClick:true,draggable:true,theme:'colored'});}","map":{"version":3,"names":["toast","handleError","error","toastMessage","arguments","length","undefined","console","message","position","autoClose","closeOnClick","draggable","theme"],"sources":["/myreactdd/frontend/src/utils/errorHandler.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\n\r\n/**\r\n * Handle errors and display toast notifications.\r\n * @param {Error} error - The error object.\r\n * @param {string} toastMessage - The message to display in the toast notification. \r\n * If not provided, defaults to 'Oops, something happened. Please try again later.'\r\n */\r\nexport function handleError(error, toastMessage = 'Oops, something went wrong. Please try again later.') {\r\n    console.error('Error:', error.message);\r\n  \r\n    toast.error(toastMessage, {\r\n      position: 'top-left',\r\n      autoClose: 5000,\r\n      closeOnClick: true,\r\n      draggable: true,\r\n      theme: 'colored',\r\n    });\r\n  }  \r\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,gBAAgB,CAEtC;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,WAAWA,CAACC,KAAK,CAAwE,IAAtE,CAAAC,YAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,qDAAqD,CACnGG,OAAO,CAACL,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAACM,OAAO,CAAC,CAEtCR,KAAK,CAACE,KAAK,CAACC,YAAY,CAAE,CACxBM,QAAQ,CAAE,UAAU,CACpBC,SAAS,CAAE,IAAI,CACfC,YAAY,CAAE,IAAI,CAClBC,SAAS,CAAE,IAAI,CACfC,KAAK,CAAE,SACT,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}